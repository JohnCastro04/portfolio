---
import JohnImage from "../assets/johnImage.webp";

import Github from "../components/icons/Github.astro";
import CvDownload from "../components/icons/CvDownload.astro";
import MailIcon from "../components/icons/MailIcon.astro";
import LinkedinIcon from "../components/icons/LinkedinIcon.astro";
---

<section id="inicio" class="hero">
  <div class="particles" id="particles"></div>

  <div class="hero-text">
    <h1 class="highlight">John Castro</h1>
    
    <h2 class="subtitle">
      <span id="obfuscated-text" class="obfuscated-text" data-text="Desarrollador Web Full-Stack">Desarrollador Web Full-Stack</span>
    </h2>

    <p>
      Apasionado por la tecnología, disfruto aprender constantemente y me motiva
      enfrentar cada reto con dedicación y enfoque para crecer como profesional.
    </p>

    <div class="hero-actions mobile-only">
      <a href="https://www.linkedin.com/in/johncastrod" class="action-btn" aria-label="LinkedIn">
        <LinkedinIcon color="var(--main-color)" size={26} />
      </a>

      <a href="https://github.com/JohnCastro04" class="action-btn" aria-label="GitHub">
        <Github color="var(--main-color)" size={26} />
      </a>

      <a href="mailto:johncastrod04@gmail.com" class="action-btn" aria-label="Email">
        <MailIcon color="var(--main-color)" size={26} />
      </a>

      <a
        href="/John Castro - Curriculum vitae.pdf"
        download
        class="action-btn primary"
        aria-label="Descargar CV"
      >
        <CvDownload color="var(--main-color)" size={26} />
      </a>
    </div>
  </div>

  <div class="hero-image">
    <img
      src={JohnImage.src}
      alt="John Castro"
      fetchpriority="high"
      draggable="false"
    />
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // ============= ANIMACIÓN DEL TEXTO OBFUSCADO =============
    const obfuscatedElement = document.getElementById("obfuscated-text");
    const originalText = obfuscatedElement.dataset.text;
    
    const obfuscatedChars = "!@#$%^&*()_+-=[]{}|;:,.<>?~`ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789¡¿¢£¥§©®°±²³µ¶¼½¾×÷ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρστυφχψω";
    
    let animationId;
    let isAnimating = false;
    
    function getRandomChar() {
      return obfuscatedChars[Math.floor(Math.random() * obfuscatedChars.length)];
    }
    
    function obfuscateText() {
      if (!isAnimating) return;
      
      let obfuscated = "";
      for (let i = 0; i < originalText.length; i++) {
        if (originalText[i] === " ") {
          obfuscated += " ";
        } else {
          obfuscated += getRandomChar();
        }
      }
      
      obfuscatedElement.textContent = obfuscated;
      animationId = requestAnimationFrame(obfuscateText);
    }
    
    function startObfuscation() {
      isAnimating = true;
      obfuscateText();
    }
    
    function stopObfuscation() {
      isAnimating = false;
      cancelAnimationFrame(animationId);
      
      // Animación de "resolución" del texto letra por letra
      let resolvedText = "";
      let currentIndex = 0;
      
      const resolveInterval = setInterval(() => {
        if (currentIndex < originalText.length) {
          resolvedText += originalText[currentIndex];
          
          // Completar el resto con caracteres obfuscados
          let remainingObfuscated = "";
          for (let i = currentIndex + 1; i < originalText.length; i++) {
            if (originalText[i] === " ") {
              remainingObfuscated += " ";
            } else {
              remainingObfuscated += getRandomChar();
            }
          }
          
          obfuscatedElement.textContent = resolvedText + remainingObfuscated;
          currentIndex++;
        } else {
          clearInterval(resolveInterval);
          obfuscatedElement.textContent = originalText;
        }
      }, 50); // Resolver una letra cada 50ms
    }
    
    // Event listeners para hover
    obfuscatedElement.addEventListener("mouseenter", startObfuscation);
    obfuscatedElement.addEventListener("mouseleave", stopObfuscation);

    // ============= ANIMACIÓN DE PARTÍCULAS =============
    const container = document.getElementById("particles");
    const totalParticles = 30; 

    for (let i = 0; i < totalParticles; i++) {
      const particle = document.createElement("div");
      particle.classList.add("particle");

      particle.style.left = `${Math.random() * 100}%`;

      const size = Math.random() * 4 + 2;
      particle.style.width = `${size}px`;
      particle.style.height = `${size}px`;

      particle.style.animationDuration = `${15 + Math.random() * 10}s`;
      particle.style.animationDelay = `${-Math.random() * 20}s`;

      container.appendChild(particle);
    }
  });
</script>

<style>
  .subtitle {
    margin-top: 0.2rem;
  }

.obfuscated-text {
  cursor: pointer;
  transition: all 0.3s ease;
  display: inline-block;
  color: var(--text-color-sub);
  position: relative;
}
.obfuscated-text:hover::before {
  opacity: 1;
  animation: shimmer 2s ease-in-out infinite;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}
</style>
