---
import JohnImage from "../assets/johnImage.webp";

import Github from "../components/icons/Github.astro";
import CvDownload from "../components/icons/CvDownload.astro";
import MailIcon from "../components/icons/MailIcon.astro";
import LinkedinIcon from "../components/icons/LinkedinIcon.astro";
---

<section id="inicio" class="hero">
  <div class="particles" id="particles"></div>

  <div class="hero-text">
    <h1 class="highlight">John Castro</h1>
    
    <h2 class="subtitle">
      <span id="typing"></span><span class="cursor"></span>
    </h2>

    <p>
      Apasionado por la tecnolog칤a, disfruto aprender constantemente y me motiva
      enfrentar cada reto con dedicaci칩n y enfoque para crecer como profesional.
    </p>

    <div class="hero-actions mobile-only">
      <a href="https://www.linkedin.com/in/johncastrod" class="action-btn" aria-label="LinkedIn">
        <LinkedinIcon color="var(--main-color)" size={26} />
      </a>

      <a href="https://github.com/JohnCastro04" class="action-btn" aria-label="GitHub">
        <Github color="var(--main-color)" size={26} />
      </a>

      <a href="mailto:johncastrod04@gmail.com" class="action-btn" aria-label="Email">
        <MailIcon color="var(--main-color)" size={26} />
      </a>

      <a
        href="public/CV John Castro - 2025.pdf"
        download
        class="action-btn primary"
        aria-label="Descargar CV"
      >
        <CvDownload color="var(--main-color)" size={26} />
      </a>
    </div>
  </div>

  <div class="hero-image">
    <img
      src={JohnImage.src}
      alt="John Castro"
      fetchpriority="high"
      draggable="false"
    />
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const text = "Desarrollador Web Fullstack";
    const typingElement = document.getElementById("typing");

    let i = 0;
    let deleting = false;

    function typeEffect() {
      if (!deleting) {
        typingElement.textContent = text.substring(0, i + 1);
        i++;

        if (i === text.length) {
          // espera aleatoria (m칤nimo 5s, m치ximo 8s)
          const wait = Math.floor(Math.random() * 3000) + 5000;
          setTimeout(() => {
            deleting = true;
            typeEffect();
          }, wait);
          return;
        }
      } else {
        typingElement.textContent = text.substring(0, i - 1);
        i--;

        if (i === 0) {
          deleting = false;
        }
      }

      setTimeout(typeEffect, deleting ? 60 : 100); // borrar m치s r치pido que escribir
    }

    typeEffect();
  });
</script>

<style>
  .subtitle {
    margin-top: 0.2rem;
  }

.cursor {
  display: inline-block;
  width: 2px;
  height: 1.2em;          /* un poco m치s largo */
  background: var(--main-color);
  margin-left: 3px;
  animation: blink 0.8s infinite;
  vertical-align: -0.15em; /* 游녣 baja el cursor ligeramente */
}


  @keyframes blink {
    0%, 50% { opacity: 1; }
    50.01%, 100% { opacity: 0; }
  }
</style>
